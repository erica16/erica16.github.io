---
title: "Quarto Basics"
format:
  html:
    code-fold: true
jupyter: python3
editor:
  render-on-save: true
---


```{python}
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.impute import SimpleImputer
from sklearn.metrics import r2_score


happy_csv = 'https://raw.githubusercontent.com/erica16/ml1_blogs/main/data/happiness-cantril-ladder.csv'
renew_csv ='https://raw.githubusercontent.com/erica16/ml1_blogs/main/data/renewable-share-energy.csv'

# read in datasets
happy_df = pd.read_csv(happy_csv)
renew_df = pd.read_csv(renew_csv)

# clean data
happy_df_rename = happy_df.rename(columns={'Cantril ladder score':'Happiness Score'})
renew_df_rename = renew_df.rename(columns={renew_df.columns[3]:'Percent Renewable Energy'})

# filter to after 2010
happy_years = happy_df_rename.loc[happy_df['Year'] > 2015]
renew_years = renew_df_rename.loc[renew_df['Year']> 2015]

# merge dfs on country
happy_renew_df = happy_years.merge(renew_years, on='Entity')

happy_renew_xy = happy_renew_df.filter(['Happiness Score', 'Percent Renewable Energy'])

# happy_renew_nums = happy_renew_xy.select_dtypes(include=[np.number])
# imputer = SimpleImputer(strategy="median")
# imputer.fit(happy_renew_nums)
# happy_renew_imputed = imputer.transform(happy_renew_nums)
# print(happy_renew_imputed)

# prepare data for training
train_set, test_set = train_test_split(happy_renew_xy, test_size=0.2, random_state=42)

X_train = np.array(train_set['Happiness Score']).reshape((-1, 1))
y_train = np.array(train_set['Percent Renewable Energy'])

X_test = np.array(test_set['Happiness Score']).reshape((-1, 1))

# linear regression
lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)
lin_reg.intercept_, lin_reg.coef_
y_pred = lin_reg.predict(X_test)

#predicted = model.predict(test_set)

plt.scatter(X_test, test_set['Percent Renewable Energy'])
plt.plot(X_test, y_pred)
plt.show()
```