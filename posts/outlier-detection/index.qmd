---
title: "Quarto Basics"
format:
  html:
    code-fold: true
jupyter: python3
editor:
  render-on-save: true
---
# Anomaly/Outlier Detection on the correlation between CO2 Emissions and Economic Inequality metric by country
As someone who majored in Environmental Informatics for my undergrad at Virginia Tech, exploring climate data and its relationship to non-climate datasets is something that I am familiar with and very passionate about. I wanted to make sure I had a set of data to use for a study on anomaly and outlier detection that would show a strong correlation between the two variables, but maybe not one that would come straight to mind for the average person. I had a hunch that the Inequality index for a country and the CO2 emissions for a country might be correlated, so I found a C02 emissions dataset from <https://www.kaggle.com/datasets/ankanhore545/carbon-dioxide-emissions-of-the-world> and an Economic Inequality dataset from <https://ourworldindata.org/economic-inequality>.

## What are these variables?
**C02**, or carbon dioxide, is one of the primary greenhouse gases responsible for driving climate change. As a greenhouse gas, its presence traps infrared radiation (heat) in the atmosphere which keeps earth comfortable in natural amounts but is detrimental when the amounts are much higher than they would normally be due to human-caused spikes in CO2 emissions. Massive increases in carbon dioxide emissions are primarily due to burning fossil fuels and other biomass-based fuels for energy used in industrial, housing, and transportation settings, and large changes in land use patterns.
**Income Inequality** per country is measured with the **Gini Coefficient**, which is a measure of the income inequality from 0 to 1 where 0 is perfect income equality and 1 is the maximal inequality. It helps assess how evenly or unevenly the wealth in a population is distributed. It is calculated by measuring a value like income on a frequency distribution, where a 45 degree angle would indicate perfect wealth distribution.

## Step 1: Clean data and view the basic scatterplot
The first thing to do after downloading the datasets and hosting them on my git repo was to explore the data, and the best way to do that is to get it onto a visualization. Before being able to visualize it though, the data needs to be cleaned - in this case, that means removing rows without useable data and making the dataframes easier to use by filtering out unnecessary columns. After the data is presentable in two separate dataframes, it needs to be merged into the same dataframe so that it can be graphed. I merged the CO2 Emissions dataframe and the Income Inequality index dataframe on Country after filtering for just rows in the Inequality dataframe where the year was 2018. I chose 2018 because it was the most recent year with data in both datasets.

```{python}
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.impute import SimpleImputer
from sklearn.metrics import r2_score


emissions_csv = 'https://raw.githubusercontent.com/erica16/ml1_blogs/main/data/historical_emissions.csv'
inequality_csv ='https://raw.githubusercontent.com/erica16/ml1_blogs/main/data/inequality.csv'

#read in datasets
emissions_df = pd.read_csv(emissions_csv)
inequality_df = pd.read_csv(inequality_csv)

#clean data
inequality_filtered = inequality_df.filter(['Country', 'Year', 'Gini coefficient (before tax) (World Inequality Database)'])


#filter to 2018
inequality_2018 = inequality_filtered.loc[inequality_filtered['Year'] == 2018]


#merge dfs on country
inequality_emissions_df = inequality_2018.merge(emissions_df, on='Country')
in_em_nums = inequality_emissions_df.select_dtypes(include=[np.number])
imputer = SimpleImputer(strategy="median")
imputer.fit(in_em_nums)
in_em_imputed = imputer.transform(in_em_nums)
inequality_emissions_df[in_em_nums.columns] = in_em_imputed


# Visualize the data
inequality_emissions_df.plot.scatter('Gini coefficient (before tax) (World Inequality Database)' ,'2018')
plt.xlabel('Inequality index (Gini Coefficient, before tax)')
plt.ylabel('CO2 Emissions in MtCO₂e')
plt.title('Correlation between CO2 Emissions and Inequality metric by Country in 2018')
plt.show()
```

## Step 2: Evaluate scatterplot findings
Looking at this scatterplot, 2 things are immediately obvious: the first is that almost all the points are clustered towards the bottom of the Y axis, but are clustered nonetheless, and the second is that there is one visually obvious outlier and one point that could be an outlier but requires further investigation.
```{python}
X = inequality_emissions_df['Gini coefficient (before tax) (World Inequality Database)']
y = inequality_emissions_df['2018']

print(inequality_emissions_df.head())

# first degree polynomial with outliers
z = np.polyfit(x=X, y=y, deg=1)
p = np.poly1d(z)

# Visualize the data

plt.scatter(X, y)
plt.plot(X, p(X))
plt.xlabel('Inequality index (Gini Coefficient, before tax)')
plt.ylabel('CO2 Emissions in MtCO₂e')
plt.title('Correlation between CO2 Emissions and Inequality metric by Country in 2018')
plt.show()

print("r-squared = {:.3f}".format(r2_score(X, y)))
```


```{python}
# split df into training set and testing set
train_set, test_set = train_test_split(inequality_emissions_df, test_size=0.2, random_state=42)
```